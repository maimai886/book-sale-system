{"version":3,"file":"static/js/710.4d2fe037.chunk.js","mappings":"gWASMA,EAAUC,EAAAA,EAAAA,OAAa,CACzBC,QAF2D,4BAG3DC,QAAS,MAcbH,EAAQI,aAAaC,QAAQC,KAAI,SAACC,GAC9B,IAAMC,EAAQC,aAAaC,QAAQ,SAOnC,OANIF,IACAD,EAAOI,SAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPL,EAAOI,SAAO,IACjBE,cAAeL,KAGhBD,CACX,IAMAP,EAAQI,aAAaU,SAASR,KAAI,SAACS,GAC/BC,QAAQC,IAAIF,GACZ,IAAAG,EAAuCH,EAAII,KAAnCC,EAAIF,EAAJE,KAAMD,EAAID,EAAJC,KAAME,EAAOH,EAAPG,QAAcH,EAALV,MA6B7B,OA5BY,GAARY,GAGmB,YAAfD,EAAKG,QAAuC,SAAfH,EAAKG,QAClCC,EAAAA,GAAAA,KAAgB,CACZC,KAAM,UACNC,QAAQ,GAADC,OAAKL,KAIhBN,EAAII,KAAKA,OACTJ,EAAII,KAAKA,KAAOQ,EAAYZ,EAAII,KAAKA,QAGvB,wCAAXE,GACPZ,aAAamB,QAAQ,QAAS,UAE9BL,EAAAA,GAAAA,KAAgB,CACZC,KAAM,UACNC,QAAQ,sMAIZF,EAAAA,GAAAA,KAAgB,CACZC,KAAM,UACNC,QAAQ,GAADC,OAAKL,KAGbN,EAAII,IACf,IAYA,SAASQ,EAAYE,GACjB,GAAsB,kBAAXA,EACP,IAAK,IAAIC,KAAOD,EAAQ,CACtB,IAAIE,EAASD,EACTA,EAAIE,SAAS,OACfD,EAASD,EAAIG,WAAW,gBAAgB,SAACC,EAAOC,GAAE,OAAKA,EAAGC,aAAa,KAErEL,IAAWD,IACbD,EAAOE,GAAUF,EAAOC,UACjBD,EAAOC,IAEc,kBAAnBD,EAAOE,KAChBF,EAAOE,GAAUJ,EAAYE,EAAOE,IAExC,CAEF,OAAOF,CACb,CAEA,MA1BgB,SAACQ,GAIb,MAHuB,QAAnBA,EAAQC,SACRD,EAAQR,OAASQ,EAAQlB,MAEtBnB,EAAQqC,EACnB,EC9EaE,EAAW,SAACpB,GAAS,OAAKd,EAAQ,CAAEiC,OAAQ,OAAQE,IAAK,qBAAsBrB,KAAAA,GAAQ,EAEvFsB,EAAc,SAACtB,GAAS,OAAKd,EAAQ,CAAEiC,OAAQ,OAAQE,IAAK,wBAAyBrB,KAAAA,GAAQ,EAM7FuB,EAAc,SAACvB,GAAS,OAAKd,EAAQ,CAAEiC,OAAQ,OAAQE,IAAK,wBAAyBrB,KAAAA,GAAQ,EAE7FwB,EAAc,SAACxB,GAAS,OAAKd,EAAQ,CAAEiC,OAAQ,OAAQE,IAAK,wBAAyBrB,KAAAA,GAAQ,EAK7FyB,EAAc,SAACzB,GAAS,OAAKd,EAAQ,CAAEiC,OAAQ,OAAQE,IAAK,wBAAyBrB,KAAAA,GAAQ,EAM7F0B,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO/B,GAAS,IAAAL,EAAA,OAAAkC,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACpBjD,EAAQ,CAAEiC,OAAQ,OAAQE,IAAK,gCAAiCrB,KAAAA,IAAQ,KAAD,EAAhF,OAARL,EAAQsC,EAAAG,KAAAH,EAAAI,OAAA,SACP1C,EAASK,MAAI,wBAAAiC,EAAAK,OAAA,GAAAP,EAAA,KACrB,gBAHyBQ,GAAA,OAAAZ,EAAAa,MAAA,KAAAC,UAAA,KAUfC,EAAW,eAAAC,GAAAf,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAc,EAAO5C,GAAS,IAAAL,EAAA,OAAAkC,EAAAA,EAAAA,KAAAG,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAV,KAAA,EAClBjD,EAAQ,CAAEiC,OAAQ,OAAQE,IAAK,wBAAyBrB,KAAAA,IAAQ,KAAD,EAAxE,OAARL,EAAQkD,EAAAT,KAAAS,EAAAR,OAAA,SACP1C,EAASK,MAAI,wBAAA6C,EAAAP,OAAA,GAAAM,EAAA,KACrB,gBAHuBE,GAAA,OAAAH,EAAAH,MAAA,KAAAC,UAAA,I,8NClCxB,EAAuB,qBAAvB,EAAwD,0BAAxD,EAA+F,2B,UCalFM,EAAuB,GAuBvBC,EAA2B,GAS3BC,EAAiC,CAC1CC,MAAM,GACNC,QAAQ,GACRC,MAAK,G,mBClBT,EArBoD,SAACC,GACnD,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAa1B,OAJAI,EAAAA,EAAAA,YAAU,WACRD,EAAWN,EAAMD,KACnB,GAAG,CAACC,EAAMD,QAGRS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACZ,MAAOG,EAAMH,MAAOa,KAAML,EAASM,SAZvB,WACnBL,GAAW,GACPN,EAAMW,UACRX,EAAMW,UAEV,EAOoEC,OAAQ,KAAKC,UAC7EL,EAAAA,EAAAA,KAAA,OAAAK,SAAMb,EAAM/C,WAGlB,E,0ECrBM6D,EAA4C,SAAHxC,GASxC,IARHyC,EAAOzC,EAAPyC,QACAC,EAAS1C,EAAT0C,UACAnB,EAAKvB,EAALuB,MACAoB,EAAS3C,EAAT2C,UAGAJ,GAFMvC,EAAN4C,OACK5C,EAAL6C,MACQ7C,EAARuC,UACGO,GAASC,EAAAA,EAAAA,GAAA/C,EAAAgD,GAENC,EAA0B,WAAdN,GAAyBT,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,KAAMhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,IAEnE,OACIjB,EAAAA,EAAAA,KAAA,MAAApE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQgF,GAAS,IAAAP,SACZE,GACGP,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CACNC,KAAMX,EACNY,MAAO,CAAEC,OAAQ,GACjBC,MAAO,CACH,CACIC,UAAU,EACVlF,QAAQ,GAADK,OAAK2C,EAAK,iDAEvBgB,SAEDU,IAGLV,IAIhB,EAyRA,EAvRyB,WAMrB,IAAAZ,GAAgCC,EAAAA,EAAAA,UAASR,GAAaS,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C+B,EAAQ7B,EAAA,GAAE8B,EAAW9B,EAAA,GAG5B+B,GAAgChC,EAAAA,EAAAA,UAASP,GAAawC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAArCE,GAAFD,EAAA,GAAaA,EAAA,IAG5BE,GAAoCnC,EAAAA,EAAAA,UAAiB,IAAGoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAAjDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAGhCG,GAAwCvC,EAAAA,EAAAA,UAASN,GAAiB8C,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAA3DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAG9B1G,EAAQC,aAAaC,QAAQ,SAEnC2G,GAA8C3C,EAAAA,EAAAA,UAAsB,IAAG4C,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAAhEE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAE1CG,EAAevB,EAAAA,EAAAA,UAARwB,GAAsB9C,EAAAA,EAAAA,GAAA6C,EAAA,GAAlB,GAEXE,GAAoCjD,EAAAA,EAAAA,UAAiB,GAAEkD,GAAAhD,EAAAA,EAAAA,GAAA+C,EAAA,GAAhDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAY,SAACrC,GAAY,OAAKA,EAAOsC,OAASH,CAAW,EAGzDI,EAAU,CACZ,CACI5D,MAAO,eACPmB,UAAW,MACX0C,MAAO,MACPC,UAAU,EACVC,OAAQ,SAAC5F,EAAUkD,GAAqD,OAAKV,EAAAA,EAAAA,KAAA,QACzEoB,MAAO,CACH8B,MAAO,GACPG,OAAQ,IACRC,QAAS,eAEVC,QAAS,WACRnB,GAAexG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACVuG,GAAY,IACf9C,OACImE,EAAAA,EAAAA,MAAA,OAAKpC,MAAO,CAAEkC,QAAS,QAASjD,SAAA,CAC3BK,EAAO+C,KACRzD,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,CAAEkC,QAAS,UAAWjD,SAAC,wBACnCL,EAAAA,EAAAA,KAAA,OAAAK,SAAOK,EAAOgD,UACd1D,EAAAA,EAAAA,KAAA,aAERV,QAASoB,EAAOpB,QAChBC,MAAM,IAEd,EAAEc,SAAE7C,GAAW,GAEvB,CACI6B,MAAO,qBACPmB,UAAW,WACX0C,MAAO,MACPC,UAAU,EACVC,OAAQ,SAACO,GAAS,OAAK3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAO,CAACvE,MAAOsE,EAAKtD,UAACL,EAAAA,EAAAA,KAAA,QACzCoB,MAAO,CACHyC,SAAU,SACVC,aAAc,WACdC,WAAY,SACZb,MAAO,OACPc,SAAU,QACVV,QAAS,gBACXjD,SAAEsD,KAAsB,GAElC,CACItE,MAAO,qBACPmB,UAAW,OACX0C,MAAO,MACPC,UAAU,GAEd,CACI9D,MAAO,eACPmB,UAAW,QACX0C,MAAO,MACPC,UAAU,GAEd,CACI9D,MAAO,qBACPmB,UAAW,aACX0C,MAAO,MACPC,UAAU,GAEd,CACI9D,MAAO,eACPmB,UAAW,OACX0C,MAAO,MACPC,UAAU,GAEd,CACI9D,MAAO,eACPmB,UAAW,YACX4C,OAAQ,SAACa,EAAQvD,GAEb,OADiBqC,EAAUrC,IAEvB8C,EAAAA,EAAAA,MAAA,QAAAnD,SAAA,EACIL,EAAAA,EAAAA,KAACkE,EAAAA,EAAAA,KAAe,CAACX,QAAS,kBAoD9C,SACmB7E,GAAA,OAAAyF,GAAAxF,MAAC,KAADC,UAAA,CArDiCwF,CAAK1D,EAAOsC,MAAM,EAAE5B,MAAO,CAAEiD,YAAa,GAAIhE,SAAC,kBAG/EL,EAAAA,EAAAA,KAACsE,EAAAA,EAAU,CAACjF,MAAM,kCAASkF,UAAWC,EAAOnE,UACzCL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,uBAIXL,EAAAA,EAAAA,KAACkE,EAAAA,EAAAA,KAAe,CAACO,SAAyB,IAAf5B,EAAkBU,QAAS,kBAAMmB,EAAKhE,EAAO,EAACL,SAAC,gBAIlF,IAIFsE,EAAgB1B,EAAQ2B,KAAI,SAACC,GAC/B,OAAKA,EAAI1B,UAGTvH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOiJ,GAAG,IACNC,OAAQ,SAACpE,GAAY,MAAM,CACvBA,OAAAA,EACAD,UAA6B,QAAlBoE,EAAIrE,UAAsB,SAAW,OAChDA,UAAWqE,EAAIrE,UACfnB,MAAOwF,EAAIxF,MACXkB,QAASwC,EAAUrC,GACtB,IAVMmE,CAYf,IAGME,EAAe,CACjBxC,gBAAAA,EACAyC,SAmFJ,SAAwBC,GACpBjJ,QAAQC,IAAI,4BAA6BgJ,GACzCzC,EAAmByC,EACvB,GA/EMP,EAAO,SAAChE,GACVgC,EAAKwC,gBAActJ,EAAAA,EAAAA,GAAC,CAAE6H,IAAK,GAAI0B,SAAU,GAAIC,KAAM,GAAIC,MAAO,IAAO3E,IACrEoC,EAAcpC,EAAOsC,MACzB,EAGMwB,EAAS,WACX1B,EAAc,EAClB,EA2BA,SAAAqB,KAFC,OAEDA,IAAApG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAxBA,SAAAC,EAAoB8E,GAAgB,IAAAsC,EAAAC,EAAA5E,EAAA6E,EAAA,OAAAxH,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEToE,EAAK+C,iBAAgB,OAAlCH,EAAGlH,EAAAG,KAEHgH,GAAOG,EAAAA,EAAAA,GAAOlE,GACdb,EAAQ4E,EAAQI,WAAU,SAACH,GAAI,OAAKxC,IAAUwC,EAAKxC,KAAK,IAC1DrC,GAAS,GACH6E,EAAOD,EAAQ5E,GACrB4E,EAAQK,OAAOjF,EAAO,GAAC/E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB4J,GACAF,IAEP7D,EAAY8D,GACZzC,EAAc,KAEdyC,EAAQM,KAAKP,GACb7D,EAAY8D,GACZzC,EAAc,IACjB1E,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0H,GAAA1H,EAAA,SAEDpC,QAAQC,IAAI,mBAAkBmC,EAAA0H,IAAW,yBAAA1H,EAAAK,OAAA,GAAAP,EAAA,mBAEhDS,MAAA,KAAAC,UAAA,CAUD,SACemH,GAAa9G,GAAA,OAAA+G,GAAArH,MAAC,KAADC,UAAA,CAmB5B,SAAAoH,KAFC,OAEDA,IAAAjI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAnBA,SAAAc,EAA6BlC,GAAW,IAAAoJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArI,EAAAA,EAAAA,KAAAG,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAX,KAAA,EAAAW,EAAAV,KAAA,GAEKZ,EAAAA,EAAAA,IAAY,MAAM,KAAD,EAA9B,OAA8BuI,EAAAjH,EAAAT,KAAtCiD,EAAQyE,EAAhB9J,KAAQqF,SAAQxC,EAAAV,KAAA,GACaX,EAAAA,EAAAA,IAAY,CAAE2I,KAAM,aAAc,KAAD,EAAAH,EAAAnH,EAAAT,KAAtDgI,EAAQJ,EAAhBhK,KAAQoK,SACVF,EAAiB7E,EAASoD,KAAI,SAACY,GAAe,IAADgB,EAC/C,OAAA5K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO4J,GAAI,IACP/B,KAAKzD,EAAAA,EAAAA,KAAA,OAAKyG,IAAG,GAAA/J,OAAK8I,EAAK/B,OACvB3G,IAAK0I,EAAKxC,MACVxG,KAA0D,QAAtDgK,EAAED,EAASG,MAAK,SAACC,GAAS,OAAKA,EAAKC,MAAQpB,EAAKhJ,IAAI,WAAC,IAAAgK,OAAA,EAApDA,EAAsDK,UAEpE,IACApF,EAAY4E,GACZzE,EAAY2E,GAAUvH,EAAAV,KAAA,iBAAAU,EAAAX,KAAA,GAAAW,EAAA8G,GAAA9G,EAAA,kCAAAA,EAAAP,OAAA,GAAAM,EAAA,oBAI7BJ,MAAA,KAAAC,UAAA,CAiCD,OATAmB,EAAAA,EAAAA,YAAU,WACNgG,GAAc,KAClB,GAAG,KAGHhG,EAAAA,EAAAA,YAAU,WACNvE,GAAuB,IAAduG,GAAoBgE,GAAc,KAC/C,GAAG,CAAChE,KAGAyB,EAAAA,EAAAA,MAAA,OAAKsD,UAAW1F,EAAWf,SAAA,EAEnBL,EAAAA,EAAAA,KAAC+G,EAAa,CACV1H,MAAO8C,EAAa9C,MACpB5C,QAAS0F,EAAa7C,QACtBC,KAAM4C,EAAa5C,KACnBY,SAAU,WAAQiC,GAAexG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIuG,GAAY,IAAE5C,MAAM,IAAS,KAIxES,EAAAA,EAAAA,KAACgH,EAAAA,EAAM,CACHF,UAAW1F,EACX6F,YAAY,2EACZC,YAAU,EACVlC,SAAU,SAACmC,GAAC,OAAKnF,EAAcmF,EAAEC,OAAOC,MAAM,EAC9CC,SA1EhB,WACI,IAAMC,EAAe/F,EAASgG,QAAO,SAAChC,GAClC,OAAOA,EAAKL,SAASsC,QAAQ1F,IAAe,CAChD,IACAN,EAAY8F,EAChB,KAwEQvH,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAACwB,KAAMA,EAAMgF,WAAW,EAAMrH,UAC/BL,EAAAA,EAAAA,KAAC2H,EAAAA,EAAK,CACFb,UAAW1F,EACXwG,WAAY,CACRC,KAAM,CACFC,KAAMxH,IAGdyH,UAAQ,EACRC,WAAYxG,EACZyB,QAAS0B,EACTsD,aAAa,eACblD,aAAcA,EACdmD,WAAY,CACRlD,SAAUR,SAMlC,C","sources":["request/request.ts","request/index.ts","webpack://book-sale-system/./src/views/Page02/page02.module.scss?cc05","views/Page02/page02.interface.tsx","components/dialog/index.tsx","views/Page02/Page02.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosRequestHeaders,AxiosResponse  } from 'axios';\r\nimport { showMessage } from \"./status\";\r\nimport { message as messageApi } from 'antd';\r\n\r\n/**\r\n * 創建axios實例\r\n */\r\nconst ENV = process.env.NODE_ENV;\r\nconst host = ENV === 'development' ? 'http://127.0.0.1:3000' : 'http://35.77.212.217:3000';\r\nconst service = axios.create({\r\n    baseURL: host,\r\n    timeout: 3000,\r\n});\r\n\r\ninterface ResType {\r\n  [key: string]: any;\r\n    code:number;\r\n    message?:string;\r\n    data?:Object;\r\n}\r\n\r\n/**\r\n * 請求攔截\r\n */\r\n\r\nservice.interceptors.request.use((config: any) => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n        config.headers = {\r\n            ...config.headers,\r\n            Authorization: token\r\n        };\r\n    }\r\n    return config\r\n})\r\n\r\n\r\n/**\r\n * 響應攔截\r\n */\r\nservice.interceptors.response.use((res:AxiosResponse<any>) => {\r\n    console.log(res)\r\n    const { code, data, message, token } = res.data;\r\n    if (code == 0) {\r\n\r\n\r\n        if (data.action == 'register' || data.action == 'login') {\r\n            messageApi.open({\r\n                type: 'success',\r\n                content: `${message}`,\r\n            });\r\n        }\r\n\r\n        if (res.data.data) {\r\n            res.data.data = backToFront(res.data.data);\r\n          }\r\n\r\n    } else if (message == '身份認證失敗') {\r\n        localStorage.setItem('token', 'custom')\r\n\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: `まだログインしていないため、一部の機能が使えませんかもしれません`,\r\n        });\r\n\r\n    } else {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: `${message}`,\r\n        });\r\n    }\r\n    return res.data;\r\n});\r\n\r\n/**\r\n * 封裝請求函數\r\n */\r\nconst request = (options: AxiosRequestConfig<any>) => {\r\n    if (options.method === 'get') {\r\n        options.params = options.data;\r\n    }\r\n    return service(options);\r\n};\r\n\r\nfunction backToFront(params:ResType) {\r\n    if (typeof params === 'object') {\r\n        for (let key in params) {\r\n          let newKey = key;\r\n          if (key.includes('_')) {\r\n            newKey = key.replaceAll(/_([a-zA-Z])/g, (match, p1) => p1.toUpperCase());\r\n          }\r\n          if (newKey !== key) {\r\n            params[newKey] = params[key];\r\n            delete params[key];\r\n          }\r\n          if (typeof params[newKey] === 'object') {\r\n            params[newKey] = backToFront(params[newKey]);\r\n          }\r\n        }\r\n      }\r\n      return params;\r\n}\r\n\r\nexport default request;","import { PurchaseDetailData } from 'src/views/Page04/page04.interface';\r\nimport request from './request'\r\n\r\n//登録\r\nexport const LoginApi = (data: any) => request({ method: 'post', url: '/api/v1/user/login', data });\r\n//新規\r\nexport const registerApi = (data: any) => request({ method: 'post', url: '/api/v1/user/register', data });\r\n\r\n/**\r\n * Page02\r\n */\r\n\r\nexport const bookInfoApi = (data: any) => request({ method: 'post', url: '/api/v1/book/bookInfo', data });\r\n\r\nexport const itemInfoApi = (data: any) => request({ method: 'post', url: '/api/v1/user/itemInfo', data });\r\n\r\n/**\r\n * Page03\r\n */\r\nexport const userInfoApi = (data: any) => request({ method: 'post', url: '/api/v1/user/userInfo', data });\r\n\r\n/**\r\n * Page04\r\n */\r\n\r\nexport const purchaseInfoApi = async (data: any)=> {\r\n    const response = await request({ method: 'post', url: '/api/v1/purchase/purchaseInfo', data });\r\n    return response.data;\r\n  };\r\n  \r\n  \r\n/**\r\n * Page05\r\n */\r\n\r\nexport const sellInfoApi = async (data: any)=> {\r\n  const response = await request({ method: 'post', url: '/api/v1/sell/sellInfo', data });\r\n  return response.data;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"page02_main__xK3SY\",\"searchbar\":\"page02_searchbar__sgGrl\",\"tableStyle\":\"page02_tableStyle__wQsoS\"};","export interface Item {\r\n    key:string,\r\n    sqlNo: number,\r\n    bookName: string,\r\n    cost: number,\r\n    price: number,\r\n    publishing: string,\r\n    amount: number,\r\n    type: number,\r\n    img: string,\r\n    author: string,\r\n    comment: string,\r\n}\r\n\r\nexport const bookInfoData: Item[] = []\r\n\r\n\r\nexport interface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\r\n    editing: boolean;\r\n    dataIndex: string;\r\n    title: any;\r\n    inputType: 'number' | 'text';\r\n    record: Item;\r\n    index: number;\r\n    children: React.ReactNode;\r\n}\r\n\r\n\r\nexport interface ItemInfo {\r\n    sqlNo: number,\r\n    kind:string,\r\n    itemName:string,\r\n    group:number,\r\n    num:number,\r\n    detail:string,\r\n}\r\n\r\nexport const itemInfoData: ItemInfo[] = []\r\n\r\n\r\nexport interface DialogDetail {\r\n    title:any,\r\n    comment:string,\r\n    show:boolean\r\n}\r\n\r\nexport const dialogDetailData: DialogDetail = {\r\n    title:'',\r\n    comment:'',\r\n    show:false,\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'antd';\r\n\r\ninterface DialogMessageProps {\r\n  title: string;\r\n  content: any;\r\n  show: boolean;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst DialogMessage: React.FC<DialogMessageProps> = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    if (props.onCancel) {\r\n      props.onCancel();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVisible(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <Modal title={props.title} open={visible} onCancel={handleCancel} footer={null}>\r\n      <div>{props.content}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DialogMessage;","import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, InputNumber, Popconfirm, Table, Tooltip, Typography } from 'antd';\r\nimport Search from 'antd/es/input/Search';\r\nimport style from './page02.module.scss';\r\nimport { bookInfoApi, itemInfoApi } from 'src/request';\r\nimport { bookInfoData, Item, EditableCellProps, itemInfoData, dialogDetailData } from './page02.interface';\r\nimport DialogMessage from 'src/components/dialog';\r\n\r\nconst EditableCell: React.FC<EditableCellProps> = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{ margin: 0 }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `${title}を入力ください!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                children\r\n            )}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst Page02: React.FC = () => {\r\n\r\n    /**\r\n     * 状態定義\r\n     */\r\n    //書籍データ\r\n    const [bookInfo, setBookInfo] = useState(bookInfoData)\r\n\r\n    //アイテムデータ\r\n    const [itemInfo, setItemInfo] = useState(itemInfoData)\r\n\r\n    //検索テキスト\r\n    const [searchText, setSearchText] = useState<string>('')\r\n\r\n    //詳細表示\r\n    const [dialogDetail, setDialogDetail] = useState(dialogDetailData);\r\n\r\n    //token\r\n    const token = localStorage.getItem('token')\r\n\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [editingKey, setEditingKey] = useState<number>(0);\r\n\r\n    const isEditing = (record: Item) => record.sqlNo == editingKey;\r\n\r\n    //colデータ準備\r\n    const columns = [\r\n        {\r\n            title: '写真',\r\n            dataIndex: 'img',\r\n            width: '10%',\r\n            editable: false,\r\n            render: (url: any, record: { img: any; comment: string; author: string }) => <span\r\n                style={{\r\n                    width: 80,\r\n                    height: 100,\r\n                    display: 'inline-flex',\r\n\r\n                }} onClick={() => {\r\n                    setDialogDetail({\r\n                        ...dialogDetail,\r\n                        title:\r\n                            <div style={{ display: 'flex' }}>\r\n                                {record.img}\r\n                                <div style={{ display: 'unset ' }}>著者：</div>\r\n                                <div >{record.author}</div>\r\n                                <div></div>\r\n                            </div>,\r\n                        comment: record.comment,\r\n                        show: true\r\n                    })\r\n                }}>{url}</span>,\r\n        },\r\n        {\r\n            title: '書籍名',\r\n            dataIndex: 'bookName',\r\n            width: '20%',\r\n            editable: true,\r\n            render: (text: any) => <Tooltip title={text}><span\r\n                style={{\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    width: '100%',\r\n                    maxWidth: '150px',\r\n                    display: 'inline-block',\r\n                }}>{text}</span></Tooltip>,\r\n        },\r\n        {\r\n            title: 'コース',\r\n            dataIndex: 'cost',\r\n            width: '15%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: '価格',\r\n            dataIndex: 'price',\r\n            width: '10%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: '出版社',\r\n            dataIndex: 'publishing',\r\n            width: '15%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: '種類',\r\n            dataIndex: 'type',\r\n            width: '10%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'operation',\r\n            render: (_: any, record: Item) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <Typography.Link onClick={() => save(record.sqlNo)} style={{ marginRight: 8 }}>\r\n                            保存\r\n                        </Typography.Link>\r\n                        <Popconfirm title=\"キャンセル?\" onConfirm={cancel}>\r\n                            <a>戻る</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                    <Typography.Link disabled={editingKey !== 0} onClick={() => edit(record)}>\r\n                        編集\r\n                    </Typography.Link>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: Item) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    //選択状態\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange,\r\n    };\r\n\r\n    /**\r\n     * 関数定義\r\n     */\r\n    //変更処理\r\n    const edit = (record: Partial<Item> & { sqlNo: React.Key }) => {\r\n        form.setFieldsValue({ img: '', bookName: '', cost: '', price: '', ...record });\r\n        setEditingKey(record.sqlNo);\r\n    };\r\n\r\n    //キャンセル処理\r\n    const cancel = () => {\r\n        setEditingKey(0);\r\n    };\r\n\r\n    //保存処理\r\n    async function save(sqlNo: React.Key) {\r\n        try {\r\n            const row = (await form.validateFields()) as Item;\r\n\r\n            const newData = [...bookInfo];\r\n            const index = newData.findIndex((item) => sqlNo === item.sqlNo);\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                newData.splice(index, 1, {\r\n                    ...item,\r\n                    ...row,\r\n                });\r\n                setBookInfo(newData);\r\n                setEditingKey(0);\r\n            } else {\r\n                newData.push(row);\r\n                setBookInfo(newData);\r\n                setEditingKey(0);\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    }\r\n\r\n    //検索処理\r\n    function onSearch(): void {\r\n        const searchResult = bookInfo.filter((item) => {\r\n            return item.bookName.indexOf(searchText) >= 0\r\n        })\r\n        setBookInfo(searchResult);\r\n    }\r\n\r\n    //書籍データを取得\r\n    async function fetchBookInfo(params: any) {\r\n        try {\r\n            const { data: { bookInfo } } = await bookInfoApi(null);\r\n            const { data: { itemInfo } } = await itemInfoApi({ kind: 'bookType' });\r\n            const bookInfoResult = bookInfo.map((item: any) => {\r\n                return {\r\n                    ...item,\r\n                    img: <img src={`${item.img}`} />,\r\n                    key: item.sqlNo,\r\n                    type: itemInfo.find((info: any) => info.num === item.type)?.itemName\r\n                };\r\n            });\r\n            setBookInfo(bookInfoResult);\r\n            setItemInfo(itemInfo);\r\n        } catch (err) {\r\n            // Handle error here\r\n        }\r\n    }\r\n\r\n    //アイテムデータを取得\r\n    async function fetchItemInfo(params: Object) {\r\n        try {\r\n            const res = await itemInfoApi(params);\r\n            console.log(123, res.data.itemInfo)\r\n            setItemInfo(itemInfo);\r\n            return res.data.itemInfo\r\n        } catch (err) {\r\n            // Handle error here\r\n        }\r\n    }\r\n\r\n    //CheckBox選択処理\r\n    function onSelectChange(newSelectedRowKeys: React.Key[]) {\r\n        console.log('selectedRowKeys changed: ', newSelectedRowKeys);\r\n        setSelectedRowKeys(newSelectedRowKeys);\r\n    };\r\n\r\n    /**\r\n     * 監視\r\n     */\r\n    //初期化\r\n    useEffect(() => {\r\n        fetchBookInfo(null);\r\n    }, [])\r\n\r\n    //検索テキスト監視\r\n    useEffect(() => {\r\n        token && searchText == '' && fetchBookInfo(null);\r\n    }, [searchText])\r\n\r\n    return (\r\n        <div className={style.main} >\r\n            {//詳細ダイアログ表示\r\n                <DialogMessage\r\n                    title={dialogDetail.title}\r\n                    content={dialogDetail.comment}\r\n                    show={dialogDetail.show}\r\n                    onCancel={() => { setDialogDetail({ ...dialogDetail, show: false }) }} />\r\n            }\r\n\r\n            {//検索Bar\r\n                <Search\r\n                    className={style.searchbar}\r\n                    placeholder=\"書籍名を入力してください\"\r\n                    allowClear\r\n                    onChange={(e) => setSearchText(e.target.value)}\r\n                    onSearch={onSearch} />\r\n            }\r\n\r\n            <Form form={form} component={false}>\r\n                <Table\r\n                    className={style.tableStyle}\r\n                    components={{\r\n                        body: {\r\n                            cell: EditableCell,\r\n                        },\r\n                    }}\r\n                    bordered\r\n                    dataSource={bookInfo}\r\n                    columns={mergedColumns}\r\n                    rowClassName=\"editable-row\"\r\n                    rowSelection={rowSelection}\r\n                    pagination={{\r\n                        onChange: cancel,\r\n                    }}\r\n                />\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page02"],"names":["service","axios","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","_objectSpread","Authorization","response","res","console","log","_res$data","data","code","message","action","messageApi","type","content","concat","backToFront","setItem","params","key","newKey","includes","replaceAll","match","p1","toUpperCase","options","method","LoginApi","url","registerApi","bookInfoApi","itemInfoApi","userInfoApi","purchaseInfoApi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","arguments","sellInfoApi","_ref2","_callee2","_context2","_x2","bookInfoData","itemInfoData","dialogDetailData","title","comment","show","props","_useState","useState","_useState2","_slicedToArray","visible","setVisible","useEffect","_jsx","Modal","open","onCancel","footer","children","EditableCell","editing","dataIndex","inputType","record","index","restProps","_objectWithoutProperties","_excluded","inputNode","InputNumber","Input","Form","name","style","margin","rules","required","bookInfo","setBookInfo","_useState3","_useState4","setItemInfo","_useState5","_useState6","searchText","setSearchText","_useState7","_useState8","dialogDetail","setDialogDetail","_useState9","_useState10","selectedRowKeys","setSelectedRowKeys","_Form$useForm","form","_useState11","_useState12","editingKey","setEditingKey","isEditing","sqlNo","columns","width","editable","render","height","display","onClick","_jsxs","img","author","text","Tooltip","overflow","textOverflow","whiteSpace","maxWidth","_","Typography","_save","save","marginRight","Popconfirm","onConfirm","cancel","disabled","edit","mergedColumns","map","col","onCell","rowSelection","onChange","newSelectedRowKeys","setFieldsValue","bookName","cost","price","row","newData","item","validateFields","_toConsumableArray","findIndex","splice","push","t0","fetchBookInfo","_fetchBookInfo","_yield$bookInfoApi","_bookInfo","_yield$itemInfoApi","_itemInfo","bookInfoResult","kind","itemInfo","_itemInfo$find","src","find","info","num","itemName","className","DialogMessage","Search","placeholder","allowClear","e","target","value","onSearch","searchResult","filter","indexOf","component","Table","components","body","cell","bordered","dataSource","rowClassName","pagination"],"sourceRoot":""}